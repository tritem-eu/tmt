module Tmt
  module Lib
    class DBSeed
      class Base
        def campaign
          @campaign ||= Tmt::Campaign.where(project: project, name: "Campaign 0").first_or_create
        end

        def self.invoke(*methods)
          object = self.new
          methods.each do |method|
            object.send(method)
          end
        end

        def roles
          puts 'ROLES:'
          Tmt.config.ROLES.each do |role|
            Role.where(name: role).first_or_create
            puts '  role: ' << role
          end
          puts 'DEFAULT USERS:'
        end

        def person_admin
          password = "top-secret"
          @person_admin ||= User.where(
            email: 'admin@example.com'
          ).first_or_create(
            name: 'admin',
            password: password,
            password_confirmation: password
          )
          unless @person_admin.has_role?(:admin)
            puts 'user: ' << @person_admin.name
            @person_admin.confirm!
            @person_admin.add_role :admin
          end
          @person_admin
        end

        def project
          projects = Tmt::Project.where(name: "Default name")
          is_new = (projects.empty? ? true : false)
          @project ||= projects.first_or_create!(creator_id: 1, description: "this project has been automatically generated by seeds", default_type_id: 1)
          if is_new
            ::User.all.each do |user|
              @project.add_member(user)
            end
          end
          @project
        end

        def test_case
          @test_case ||= ::Tmt::TestCase.where(name: "lyo-test", description: "sample description", project: project, creator: person_admin, type_id: test_case_types[:sequence_no_file].id).first_or_create
        end

        def test_case_types
          @test_case_types ||= {
            default: Tmt::TestCaseType.where(name: "Default with file", has_file: true).first_or_create,
            sequence_file: Tmt::TestCaseType.where(name: "Sequence (file)", has_file: true, extension: "seq").first_or_create,
            sequence_no_file: Tmt::TestCaseType.where(name: "Sequence (no file)", has_file: false, extension: "seq").first_or_create
          }
        end

        def test_case_version
          ::Tmt::TestCaseVersion.where(comment: "example code").first_or_create!(author: person_admin, test_case: test_case, datafile: "Example code")
        end

        def test_run
          @test_run ||= ::Tmt::TestRun.where(name: "test run 0").first_or_create(name: "test run 0", campaign: campaign, creator: person_admin)
        end

        def configuration
          @configuration ||= ::Tmt::Cfg.where(instance_name: "TMT",
            records_per_page: 10,
            file_size: 10, # MB
            hello_message: "Hello",
            hello_subtitle: "This message is generated automatically - change it in the configuration"
          ).first_or_create!
        end
      end
    end
  end
end
